//RMP patternvar Autocomplete = (function(){		$.fn.tagName = function() {		 alert("taggy");    return this.get(0).tagName;}    var show = function(invoker){	    var input = $('#requested-item');	//var container = $('div[class^="items-drop-container"]');			//alert(invoker.siblings().eq(0));	var container = invoker.siblings().eq(0);		//var invoker = $('.autocompl-component');		        if (container.css('display')!='block'){            container.show();			if (input){						input.show();			}            //            if (!container.attr("[class*='extracted-drop']")){  //              container.attr('class',container.attr('class')+' extracted-drop');    //    }     }else {//            container.hide();	//		input.hide();        }  	        var noOfItems = Autocomplete.CITIES.length;                //rerender dropdown after reopening(cleanup)        for (var i = 0 ;i < noOfItems; i++){            if (container.children().length > 0){                container.show();            }        }		        //fixme according jslint i=i+1 and loop for DOM best practice        var citiesDOMElements = new Array();        // if there are no sub-items yet		        if (container.children().length == 0){                var inp = document.createElement('input');                inp.setAttribute('id','requested-item');                inp.setAttribute('class','item-name');				invoker.append(inp);            for (var i = 0 ;i < noOfItems; i++){                //var t = document.createElement('div');				var t = $('<div>');                //t.innerHTML=Autocomplete.CITIES[i];				 t.text(Autocomplete.CITIES[i]);                container.append(t);                // array of sub-items elements                citiesDOMElements[i] = t;            //event listener for mouse click on sub-items item for none-IE            // use closure again to close on specific t element            if (typeof window.addEventListener=='function'){                (function(t){                    t.click(function(){										t.parent().prev().text(t.text());                    //$('.item-name-holder').text(t.text());                    container.hide();                    _styleResetter();                    t.className='hovered';                })            })(t)            }            //END of listener        }        }				//alert(citiesDOMElements[1].innerHTML);                document.getElementById('requested-item').value='';        document.getElementById('requested-item').focus();                //in order to access to citiesDOMElements, make closure on it        try {            (function(citiesDOMElements){inp.addEventListener('keyup',function(event){                //array for storing preselected matched elements                var tempStorage = new Array();                var tempIndex;                    for (var g=0;g<noOfItems;g++) {                        var requestedItemVal = document.getElementById('requested-item').value;                            if (requestedItemVal.toLowerCase()==Autocomplete.CITIES[g].substr(0,requestedItemVal.length).toLowerCase() && (requestedItemVal!='')){                                tempStorage.push(citiesDOMElements[g]);                                tempIndex = g;                                citiesDOMElements[g].style.display='block';                            } else if (requestedItemVal=='') {                                citiesDOMElements[g].style.display='block';                                citiesDOMElements[g].className='';                            } else {                                citiesDOMElements[g].style.display='none';                            }                            }                        if (tempStorage.length == 1){                                tempStorage[0].className='hovered';                        } else {                                for (var t = 0;t < tempStorage.length; t++){                                tempStorage[t].className='';                            }                        }                                        // ENTER pressed adds selected element ontop,if it single                        if ( (event.keyCode == 13) && (tempStorage.length == 1)){                            container.hide();                            //document.getElementById('item-name-holder').innerHTML = tempStorage[0].innerHTML;							$('.item-name-holder').text(tempStorage[0].innerHTML);                            _styleResetter();                            citiesDOMElements[tempIndex].className='hovered';                        }                        })            })(citiesDOMElements)        } catch(e){            //TODO investigate why 'inp' not found            //console.log(e);        }    }                var init = function() {        //close on arrowUp/arrowDown            var itemsContainer = $('.items-drop-container');            document.addEventListener('keyup',function(event){			//alert(itemscontainer.css('display'));            if (event.keyCode == 40 && itemsContainer.css('display')=='block') {           // event.preventDefault();                for (var i=0;i<itemsContainer.children().length-1;i++){                    if (itemsContainer.getAttribute('class').indexOf('hovered')==-1){                        itemsContainer.children[i].setAttribute('class','');                        itemsContainer.children[i].nextSibling.setAttribute('class','hovered');						break;                    }                }            }        });		        //close on Esc		var drop = $('.items-drop-container');        document.addEventListener('keyup',function(event){            if (event.keyCode == 27) {				_styleResetter();                if (drop.css('display')=='block'){						drop.hide();                    }            }        })				/*close,when clicked outside drop		document.getElementById('items-drop').addEventListener('click',function(event){			event.stopPropagation();        })        document.addEventListener('click',function(event){           if (document.getElementById('items-drop').style.display=='block'){                    document.getElementById('items-drop').style.display='none';                    }        })		*/		$('.autocompl-component').on('click',function(event){			Autocomplete.show($(this));        })        };            //private function,it's visible within Autocomplete only, according to RMP pattern    //sets styles for selected sub-items and resets for others ones    var _styleResetter = function(){		document.getElementById('requested-item').style.display = 'none';        var itemsContainer = $('div[class^="items-drop-container"]');//		//for (i in itemsContainer.children()) {//         if (itemsContainer.children[g].tagName == 'div'){                itemsContainer.eq(i).attr('class','');  //          } //       }         }        //public API        return {            show:show,			init:init        } })();  //static array Autocomplete.CITIES = ["Kiev","Dnepropetrovsk","Odessa","Kremenchug","Alushta","Chernigov","Omsk","Copenhagen","Oslo","Kirovograd","Moscow","Malmo"];